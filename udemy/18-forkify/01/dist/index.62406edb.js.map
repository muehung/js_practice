{"mappings":"AAAA,MAAM,kBAAkB,SAAS,cAAc;AAE/C,MAAM,UAAU,SAAU,CAAC;IACzB,OAAO,IAAI,QAAQ,SAAU,CAAC,EAAE,MAAM;QACpC,WAAW;YACT,OAAO,IAAI,MAAM,CAAC,qCAAqC,EAAE,EAAE,OAAO,CAAC;QACrE,GAAG,IAAI;IACT;AACF;AAEA,uCAAuC;AACvC,4EAA4E;AAC5E,uCAAuC;AAEvC,MAAM,YAAY;IAEhB,IAAI;QAEF,oBAAoB;QACpB,MAAM,WAAW,MAAM,MAAM;QAC3B,MAAM,OAAO,MAAM,SAAS;QAC5B,QAAQ,IAAI;QAEZ,IAAG,CAAC,SAAS,IAAI,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,QAAQ,EAAE,EAAE,IAAI,OAAO,CAAC,CAAC;QAElE,0BAA0B;QAC1B,IAAI,EAAC,MAAM,EAAC,GAAG,KAAK;QAEpB,SAAS;YACP,IAAI,OAAO;YACX,QAAQ,OAAO;YACf,WAAW,OAAO;YAClB,OAAO,OAAO;YACd,aAAa,OAAO;YACpB,WAAW,OAAO;YAClB,UAAU,OAAO;YACjB,UAAU,OAAO;QACnB;QACA,QAAQ,IAAI;QAEZ,sBAAsB;QAEtB,MAAM,iBAAiB,CAAC;;oBAEV,EAAE,OAAO,OAAO,OAAO,EAAE,OAAO,MAAM;;kBAExC,EAAE,OAAO,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAgDvB,EAAE,OAAO,YAAY,IAAI,CAAA;YACvB,OAAO,CAAC;;;;;4CAKwB,EAAE,IAAI,SAAS;;2CAEhB,EAAE,IAAI,KAAK;gBACtC,EAAE,IAAI,YAAY;;;YAGtB,CAAC;QACH,GAAG;;;;;;;;;;;;;kBAaK,EAAE,OAAO,UAAU;;;;;;;;;MAS/B,CAAC;QACD,gBAAgB,mBAAmB,cAAc;IACrD,EACA,OAAM,KAAI;QACR,QAAQ,IAAI;IACd;AAEF;AAEA","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n// https://forkify-api.herokuapp.com/v2/daba7a15-59d4-476d-8029-ba71f97a85a9\n///////////////////////////////////////\n\nconst getRecipe = async function(){\n\n  try {\n\n    // 1) loading recipe\n    const response = await fetch('https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886');\n      const data = await response.json();\n      console.log(data);\n\n      if(!response.ok) throw new Error(`${data.message} (${res.status})`);  \n\n      // console.log(data.data);\n      let {recipe} = data.data;\n      \n      recipe = {\n        id: recipe.id,\n        imgUrl: recipe.image_url,\n        publisher: recipe.publisher,\n        title: recipe.title,\n        ingredients: recipe.ingredients,\n        sourceUrl: recipe.source_url,\n        servings: recipe.servings,\n        cookTime: recipe.cooking_time,\n      };\n      console.log(recipe)\n\n      // 2) Rendering recipe\n\n      const templateRecipe = `\n      <figure class=\"recipe__fig\">\n          <img src=\"${recipe.imgUrl}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\n          <h1 class=\"recipe__title\">\n            <span>${recipe.title}</span>\n          </h1>\n        </figure>\n\n        <div class=\"recipe__details\">\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"src/img/icons.svg#icon-clock\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--minutes\">45</span>\n            <span class=\"recipe__info-text\">minutes</span>\n          </div>\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"src/img/icons.svg#icon-users\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--people\">4</span>\n            <span class=\"recipe__info-text\">servings</span>\n\n            <div class=\"recipe__info-buttons\">\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n                </svg>\n              </button>\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          <div class=\"recipe__user-generated\">\n            <svg>\n              <use href=\"src/img/icons.svg#icon-user\"></use>\n            </svg>\n          </div>\n          <button class=\"btn--round\">\n            <svg class=\"\">\n              <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n            </svg>\n          </button>\n        </div>\n\n        <div class=\"recipe__ingredients\">\n          <h2 class=\"heading--2\">Recipe ingredients</h2>\n          <ul class=\"recipe__ingredient-list\">\n          ${recipe.ingredients.map(ing => {\n            return `\n            <li class=\"recipe__ingredient\">\n              <svg class=\"recipe__icon\">\n                <use href=\"src/img/icons.svg#icon-check\"></use>\n              </svg>\n              <div class=\"recipe__quantity\">${ing.quantity}</div>\n              <div class=\"recipe__description\">\n                <span class=\"recipe__unit\">${ing.unit}</span>\n                ${ing.description}\n              </div>\n            </li>\n            `\n          })}\n          </ul>\n        </div>\n\n        <div class=\"recipe__directions\">\n          <h2 class=\"heading--2\">How to cook it</h2>\n          <p class=\"recipe__directions-text\">\n            This recipe was carefully designed and tested by\n            <span class=\"recipe__publisher\">The Pioneer Woman</span>. Please check out\n            directions at their website.\n          </p>\n          <a\n            class=\"btn--small recipe__btn\"\n            href=\"${recipe.sourceUrl}\"\n            target=\"_blank\"\n          >\n            <span>Directions</span>\n            <svg class=\"search__icon\">\n              <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n            </svg>\n          </a>\n        </div>\n      `;\n      recipeContainer.insertAdjacentHTML('afterbegin', templateRecipe);\n  }\n  catch(err){\n    console.log(err);\n  }\n  \n}\n\ngetRecipe();"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}